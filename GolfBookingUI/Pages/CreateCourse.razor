@page "/createcourse/{ClubId:int?}"
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient Http
@inject NavigationManager NavManager
@inject GolfBookingUI.Services.AuthService AuthService
@using GolfBooking.Shared.Dtos

<div class="container my-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Create New Course</h3>
        </div>
        <div class="card-body">
            <EditForm Model="courseModel" OnValidSubmit="HandleCreateCourse">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Course Name</label>
                    <InputText class="form-control" @bind-Value="courseModel.Name" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Course Type</label>
                    <InputText class="form-control" @bind-Value="courseModel.Type" />
                </div>

                <button type="submit" class="btn btn-primary">Create Course</button>
            </EditForm>

            @if (!string.IsNullOrEmpty(message))
            {
                <div class="alert alert-danger mt-3">@message</div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int? ClubId { get; set; }

    private CourseCreate courseModel = new CourseCreate
    {
        Name = string.Empty,
        GolfClubId = 0
    };

    private List<ClubRead>? clubs;
    private string? message;
    private string ClubName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (ClubId.HasValue)
        {
            courseModel.GolfClubId = ClubId.Value;
            var club = await Http.GetFromJsonAsync<ClubRead>($"api/GolfClub/{ClubId.Value}");
            ClubName = club?.Name ?? string.Empty;
        }
        else
        {
            clubs = await Http.GetFromJsonAsync<List<ClubRead>>("api/GolfClub");
        }
    }

    private async Task HandleCreateCourse()
    {
        AuthService.ApplyBearerToken(Http);
        var response = await Http.PostAsJsonAsync("api/GolfCourse", courseModel);
        if (response.IsSuccessStatusCode)
        {
            NavManager.NavigateTo("/clubs");
        }
        else
        {
            message = await response.Content.ReadAsStringAsync();
        }
    }
}
