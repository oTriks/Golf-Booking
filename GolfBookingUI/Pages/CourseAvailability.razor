@page "/courseavailability/{CourseId:int}"
@using GolfBooking.Shared.Dtos
@inject HttpClient Http
@inject NavigationManager NavManager

<div class="container my-4">
    <div class="card shadow">
        <div class="card-header bg-secondary text-white">
            <h3 class="mb-0">Availability</h3>
        </div>
        <div class="card-body">
            @if (availability == null)
            {
                <div class="alert alert-info">Loading availability...</div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="thead-light">
                            <tr>
                                <th>Date</th>
                                <th>Time Slot</th>
                                <th>Slots Left</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var slot in availability)
                            {
                                <tr>
                                    <td>@slot.Date.ToShortDateString()</td>
                                    <td>@slot.TimeSlot</td>
                                    <td>@slot.AvailableSlots</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public int CourseId { get; set; }
    private List<TimeSlotAvailability>? availability;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync($"api/GolfBooking/availability/{CourseId}");
        if (response.IsSuccessStatusCode)
        {
            availability = await response.Content.ReadFromJsonAsync<List<TimeSlotAvailability>>();
        }
    }
}
